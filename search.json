[{"path":"http://mikabr.io/multibiasmeta/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 multibiasmeta authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://mikabr.io/multibiasmeta/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mika Braginsky. Author, maintainer. Maya Mathur. Author.","code":""},{"path":"http://mikabr.io/multibiasmeta/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Braginsky M, Mathur M (2023). multibiasmeta: Sensitivity analysis interactive effects internal bias publication bias meta-analyses. R package version 0.0.1, http://mikabr.io/multibiasmeta/.","code":"@Manual{,   title = {multibiasmeta: Sensitivity analysis for the interactive effects of internal bias and publication bias in meta-analyses},   author = {Mika Braginsky and Maya Mathur},   year = {2023},   note = {R package version 0.0.1},   url = {http://mikabr.io/multibiasmeta/}, }"},{"path":[]},{"path":"http://mikabr.io/multibiasmeta/reference/meta_meat.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-analysis about meat consumption — meta_meat","title":"Meta-analysis about meat consumption — meta_meat","text":"Meta-analysis effectiveness educational behavior interventions attempt reduce meat consumption appealing animal welfare.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/meta_meat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-analysis about meat consumption — meta_meat","text":"","code":"meta_meat"},{"path":"http://mikabr.io/multibiasmeta/reference/meta_meat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meta-analysis about meat consumption — meta_meat","text":"data frame 100 rows 4 columns: yi Point estimate log-risk ratio scale vi Variance point estimate cluster Paper contributed point estimate randomized Logical indicating whether study randomized","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/meta_meat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Meta-analysis about meat consumption — meta_meat","text":"Mathur MB, Peacock J, Reichling DB, Nadler J, Bain PA, Gardner CD, Robinson TN (2021). “Interventions reduce meat consumption appealing animal welfare: Meta-analysis evidence-based recommendations.” Appetite, 164, 105277.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"E-value for meta-analysis with multiple biases — multibias_evalue","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"E-value meta-analysis multiple biases","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"","code":"multibias_evalue(   yi,   vi,   sei,   cluster = 1:length(yi),   biased = TRUE,   selection_ratio,   q = 0,   favor_positive = TRUE,   alpha_select = 0.05,   ci_level = 0.95,   small = TRUE,   bias_max = 20,   assumed_bias_type = NULL )"},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"yi vector point estimates meta-analyzed. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). cluster Vector length number rows data, indicating cluster study considered part (defaults treating studies independent; .e., study cluster). biased Boolean indicating whether study considered internally biased; either single value used studies vector length number rows data (defaults studies). selection_ratio Ratio publication bias favors affirmative studies (.e., studies p-values less alpha_select estimates direction indicated favor_positive). q attenuated value shift point estimate CI. specified scale yi (e.g., yi log-RR scale, q well). favor_positive TRUE publication bias assumed favor significant positive estimates; FALSE assumed favor significant negative estimates. alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant). ci_level Confidence interval level (proportion) corrected point estimate. (alpha level inference corrected point estimate calculated ci_level.) small inference allow small meta-analysis? recommend always using TRUE. bias_max largest value bias, additive scale, included grid search. bias units yi. assumed_bias_type List biases consider computing evalues (objects bias returned EValue::confounding(), EValue::selection(), EValue::misclassification()) (defaults NULL, .e. agnostic nature internal bias). NULL, yi argument must log-RR scale (yi already scale, use EValue::convert_measures() make ).","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"object class metabias::metabias(), list containing: data tibble one row per study columns yi, vi, sei, cluster, biased. values list elements selection_ratio, q, favor_positive, alpha_select, ci_level, small, bias_max. stats tibble columns bias_est, bias_ci, evalue_est, evalue_ci.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"functions passed assumed_bias_type, see EValue package multiple-bias vignette: vignette(\"multiple-bias\", package = \"EValue\")","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"Mathur MB (2022). “Sensitivity analysis interactive effects internal bias publication bias meta-analyses.” doi:10.31219/osf.io/u7vcb , osf.io/u7vcb. Ding P, VanderWeele TJ (2016). “Sensitivity analysis without assumptions.” Epidemiology (Cambridge, Mass.), 27(3), 368. Smith LH, VanderWeele TJ (2019). “Bounding bias due selection.” Epidemiology (Cambridge, Mass.), 30(4), 509. VanderWeele TJ, Li Y (2019). “Simple sensitivity analysis differential measurement error.” American journal epidemiology, 188(10), 1823--1829.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"E-value for meta-analysis with multiple biases — multibias_evalue","text":"","code":"multibias_evalue(yi = meta_meat$yi,                  vi = meta_meat$vi,                  selection_ratio = 4,                  biased = !meta_meat$randomized) #> List of 4 #>  $ data  : tibble [100 × 5] (S3: tbl_df/tbl/data.frame) #>   ..$ yi     : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ vi     : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   ..$ sei    : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   ..$ cluster: int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ biased : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>  $ values:List of 7 #>   ..$ selection_ratio: num 4 #>   ..$ q              : num 0 #>   ..$ favor_positive : logi TRUE #>   ..$ alpha_select   : num 0.05 #>   ..$ ci_level       : num 0.95 #>   ..$ small          : logi TRUE #>   ..$ bias_max       : num 20 #>  $ stats : tibble [1 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ bias_est: num 0.539 #>   ..$ bias_ci : num 0.27 #>  $ fits  : list() #>  - attr(*, \"class\")= chr [1:2] \"metabias\" \"list\"  # specify confounding as internal bias multibias_evalue(yi = meta_meat$yi,                  vi = meta_meat$vi,                  selection_ratio = 4,                  biased = !meta_meat$randomized,                  assumed_bias_type = list(EValue::confounding())) #> List of 4 #>  $ data  : tibble [100 × 5] (S3: tbl_df/tbl/data.frame) #>   ..$ yi     : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ vi     : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   ..$ sei    : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   ..$ cluster: int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ biased : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>  $ values:List of 7 #>   ..$ selection_ratio: num 4 #>   ..$ q              : num 0 #>   ..$ favor_positive : logi TRUE #>   ..$ alpha_select   : num 0.05 #>   ..$ ci_level       : num 0.95 #>   ..$ small          : logi TRUE #>   ..$ bias_max       : num 20 #>  $ stats : tibble [1 × 4] (S3: tbl_df/tbl/data.frame) #>   ..$ bias_est  : num 0.539 #>   ..$ bias_ci   : num 0.27 #>   ..$ evalue_est: num 2.82 #>   ..$ evalue_ci : num 1.95 #>  $ fits  : list() #>  - attr(*, \"class\")= chr [1:2] \"metabias\" \"list\""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Correction for meta-analysis with multiple biases — multibias_meta","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"Correction meta-analysis multiple biases","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"","code":"multibias_meta(   yi,   vi,   sei,   cluster = 1:length(yi),   biased = TRUE,   selection_ratio,   bias_affirmative,   bias_nonaffirmative,   favor_positive = TRUE,   alpha_select = 0.05,   ci_level = 0.95,   small = TRUE,   return_worst_meta = FALSE,   return_pubbias_meta = FALSE )"},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"yi vector point estimates meta-analyzed. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). cluster Vector length number rows data, indicating cluster study considered part (defaults treating studies independent; .e., study cluster). biased Boolean indicating whether study considered internally biased; either single value used studies vector length number rows data (defaults studies). selection_ratio Ratio publication bias favors affirmative studies (.e., studies p-values less alpha_select estimates direction indicated favor_positive). bias_affirmative Mean internal bias, additive scale, among published affirmative studies. bias units yi. bias_nonaffirmative Mean internal bias, additive scale, among published nonaffirmative studies. bias units yi. favor_positive TRUE publication bias assumed favor significant positive estimates; FALSE assumed favor significant negative estimates. alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant). ci_level Confidence interval level (proportion) corrected point estimate. (alpha level inference corrected point estimate calculated ci_level.) small inference allow small meta-analysis? recommend always using TRUE. return_worst_meta Boolean indicating whether worst-case meta-analysis nonaffirmative studies returned. return_pubbias_meta Boolean indicating whether meta-analysis correcting publication confounding returned.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"object class metabias::metabias(), list containing: data tibble one row per study columns yi, vi, sei, biased, cluster, affirmative, yi_adj, weight, userweight. values list elements selection_ratio, bias_affirmative, bias_nonaffirmative, favor_positive, alpha_select, ci_level, small. stats tibble columns model, estimate, se, ci_lower, ci_upper, p_value. fit list fitted models.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"Mathur MB (2022). “Sensitivity analysis interactive effects internal bias publication bias meta-analyses.” doi:10.31219/osf.io/u7vcb , osf.io/u7vcb.","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibias_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correction for meta-analysis with multiple biases — multibias_meta","text":"","code":"# publication bias without internal bias multibias_meta(yi = meta_meat$yi,                vi = meta_meat$vi,                biased = !meta_meat$randomized,                selection_ratio = 4,                bias_affirmative = 0,                bias_nonaffirmative = 0) #> List of 4 #>  $ data  : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   ..$ biased     : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>   ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   ..$ yi_adj     : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   ..$ userweight : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>  $ values:List of 7 #>   ..$ selection_ratio    : num 4 #>   ..$ bias_affirmative   : num 0 #>   ..$ bias_nonaffirmative: num 0 #>   ..$ favor_positive     : logi TRUE #>   ..$ alpha_select       : num 0.05 #>   ..$ ci_level           : num 0.95 #>   ..$ small              : logi TRUE #>  $ stats :'data.frame':\t1 obs. of  6 variables: #>   ..$ model   : chr \"multibias\" #>   ..$ estimate: num 0.129 #>   ..$ se      : num 0.021 #>   ..$ ci_lower: num 0.0871 #>   ..$ ci_upper: num 0.172 #>   ..$ p_value : num 1.34e-07 #>  $ fits  :List of 1 #>   ..$ multibias:List of 25 #>   .. ..$ data.full     :'data.frame':\t100 obs. of  14 variables: #>   .. .. ..$ effect.size     : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..$ var.eff.size    : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ userweights     : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. .. ..$ study           : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ k               : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ avg.var.eff.size: num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sd.eff.size     : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ weights         : num [1:100] 8.78 122.29 63.99 17.64 166.67 ... #>   .. .. ..$ pred            : num [1:100, 1] 0.2 0.2 0.2 0.2 0.2 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e               : num [1:100, 1] -0.5887 -0.199 -0.2783 0.1947 -0.0912 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ r.weights       : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. .. ..$ pred.r          : num [1:100, 1] 0.129 0.129 0.129 0.129 0.129 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e.r             : num [1:100] -0.5177 -0.1279 -0.2072 0.2658 -0.0202 ... #>   .. .. ..$ ImH             : num [1:100, 1:100] 0.99367 -0.00633 -0.00633 -0.00633 -0.00633 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. ..$ X.full        :'data.frame':\t100 obs. of  2 variables: #>   .. .. ..$ study       : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ X.Intercept.: num [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ reg_table     :'data.frame':\t1 obs. of  9 variables: #>   .. .. ..$ labels: chr \"X.Intercept.\" #>   .. .. ..$ b.r   : num 0.129 #>   .. .. ..$ SE    : num 0.021 #>   .. .. ..$ t     : num 6.15 #>   .. .. ..$ dfs   : num 49.3 #>   .. .. ..$ prob  : num 1.34e-07 #>   .. .. ..$ CI.L  : num 0.0871 #>   .. .. ..$ CI.U  : num 0.172 #>   .. .. ..$ sig   : chr \"***\" #>   .. ..$ mod_label     : chr [1:2] \"RVE: User Specified Weights\" \"with Small-Sample Corrections\" #>   .. ..$ mod_notice    : chr \"Note: If df < 4, do not trust the results\" #>   .. ..$ modelweights  : chr \"CORR\" #>   .. ..$ mod_info      :List of 4 #>   .. .. ..$ k: int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ N: num 100 #>   .. .. ..$ p: num 0 #>   .. .. ..$ M: int 100 #>   .. ..$ user_weighting: logi TRUE #>   .. ..$ ml            : language yi_adj ~ 1 #>   .. ..$ cl            : language robumeta::robu(formula = yi_adj ~ 1, data = dat, studynum = cluster, var.eff.size = dat$vi,      userweights = da| __truncated__ #>   .. ..$ N             : num 100 #>   .. ..$ M             : int 100 #>   .. ..$ k             : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ k_list        :List of 100 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. .. [list output truncated] #>   .. ..$ p             : num 0 #>   .. ..$ X             :List of 100 #>   .. .. ..$ 1  : num [1, 1] 1 #>   .. .. ..$ 2  : num [1, 1] 1 #>   .. .. ..$ 3  : num [1, 1] 1 #>   .. .. ..$ 4  : num [1, 1] 1 #>   .. .. ..$ 5  : num [1, 1] 1 #>   .. .. ..$ 6  : num [1, 1] 1 #>   .. .. ..$ 7  : num [1, 1] 1 #>   .. .. ..$ 8  : num [1, 1] 1 #>   .. .. ..$ 9  : num [1, 1] 1 #>   .. .. ..$ 10 : num [1, 1] 1 #>   .. .. ..$ 11 : num [1, 1] 1 #>   .. .. ..$ 12 : num [1, 1] 1 #>   .. .. ..$ 13 : num [1, 1] 1 #>   .. .. ..$ 14 : num [1, 1] 1 #>   .. .. ..$ 15 : num [1, 1] 1 #>   .. .. ..$ 16 : num [1, 1] 1 #>   .. .. ..$ 17 : num [1, 1] 1 #>   .. .. ..$ 18 : num [1, 1] 1 #>   .. .. ..$ 19 : num [1, 1] 1 #>   .. .. ..$ 20 : num [1, 1] 1 #>   .. .. ..$ 21 : num [1, 1] 1 #>   .. .. ..$ 22 : num [1, 1] 1 #>   .. .. ..$ 23 : num [1, 1] 1 #>   .. .. ..$ 24 : num [1, 1] 1 #>   .. .. ..$ 25 : num [1, 1] 1 #>   .. .. ..$ 26 : num [1, 1] 1 #>   .. .. ..$ 27 : num [1, 1] 1 #>   .. .. ..$ 28 : num [1, 1] 1 #>   .. .. ..$ 29 : num [1, 1] 1 #>   .. .. ..$ 30 : num [1, 1] 1 #>   .. .. ..$ 31 : num [1, 1] 1 #>   .. .. ..$ 32 : num [1, 1] 1 #>   .. .. ..$ 33 : num [1, 1] 1 #>   .. .. ..$ 34 : num [1, 1] 1 #>   .. .. ..$ 35 : num [1, 1] 1 #>   .. .. ..$ 36 : num [1, 1] 1 #>   .. .. ..$ 37 : num [1, 1] 1 #>   .. .. ..$ 38 : num [1, 1] 1 #>   .. .. ..$ 39 : num [1, 1] 1 #>   .. .. ..$ 40 : num [1, 1] 1 #>   .. .. ..$ 41 : num [1, 1] 1 #>   .. .. ..$ 42 : num [1, 1] 1 #>   .. .. ..$ 43 : num [1, 1] 1 #>   .. .. ..$ 44 : num [1, 1] 1 #>   .. .. ..$ 45 : num [1, 1] 1 #>   .. .. ..$ 46 : num [1, 1] 1 #>   .. .. ..$ 47 : num [1, 1] 1 #>   .. .. ..$ 48 : num [1, 1] 1 #>   .. .. ..$ 49 : num [1, 1] 1 #>   .. .. ..$ 50 : num [1, 1] 1 #>   .. .. ..$ 51 : num [1, 1] 1 #>   .. .. ..$ 52 : num [1, 1] 1 #>   .. .. ..$ 53 : num [1, 1] 1 #>   .. .. ..$ 54 : num [1, 1] 1 #>   .. .. ..$ 55 : num [1, 1] 1 #>   .. .. ..$ 56 : num [1, 1] 1 #>   .. .. ..$ 57 : num [1, 1] 1 #>   .. .. ..$ 58 : num [1, 1] 1 #>   .. .. ..$ 59 : num [1, 1] 1 #>   .. .. ..$ 60 : num [1, 1] 1 #>   .. .. ..$ 61 : num [1, 1] 1 #>   .. .. ..$ 62 : num [1, 1] 1 #>   .. .. ..$ 63 : num [1, 1] 1 #>   .. .. ..$ 64 : num [1, 1] 1 #>   .. .. ..$ 65 : num [1, 1] 1 #>   .. .. ..$ 66 : num [1, 1] 1 #>   .. .. ..$ 67 : num [1, 1] 1 #>   .. .. ..$ 68 : num [1, 1] 1 #>   .. .. ..$ 69 : num [1, 1] 1 #>   .. .. ..$ 70 : num [1, 1] 1 #>   .. .. ..$ 71 : num [1, 1] 1 #>   .. .. ..$ 72 : num [1, 1] 1 #>   .. .. ..$ 73 : num [1, 1] 1 #>   .. .. ..$ 74 : num [1, 1] 1 #>   .. .. ..$ 75 : num [1, 1] 1 #>   .. .. ..$ 76 : num [1, 1] 1 #>   .. .. ..$ 77 : num [1, 1] 1 #>   .. .. ..$ 78 : num [1, 1] 1 #>   .. .. ..$ 79 : num [1, 1] 1 #>   .. .. ..$ 80 : num [1, 1] 1 #>   .. .. ..$ 81 : num [1, 1] 1 #>   .. .. ..$ 82 : num [1, 1] 1 #>   .. .. ..$ 83 : num [1, 1] 1 #>   .. .. ..$ 84 : num [1, 1] 1 #>   .. .. ..$ 85 : num [1, 1] 1 #>   .. .. ..$ 86 : num [1, 1] 1 #>   .. .. ..$ 87 : num [1, 1] 1 #>   .. .. ..$ 88 : num [1, 1] 1 #>   .. .. ..$ 89 : num [1, 1] 1 #>   .. .. ..$ 90 : num [1, 1] 1 #>   .. .. ..$ 91 : num [1, 1] 1 #>   .. .. ..$ 92 : num [1, 1] 1 #>   .. .. ..$ 93 : num [1, 1] 1 #>   .. .. ..$ 94 : num [1, 1] 1 #>   .. .. ..$ 95 : num [1, 1] 1 #>   .. .. ..$ 96 : num [1, 1] 1 #>   .. .. ..$ 97 : num [1, 1] 1 #>   .. .. ..$ 98 : num [1, 1] 1 #>   .. .. ..$ 99 : num [1, 1] 1 #>   .. .. .. [list output truncated] #>   .. ..$ y             : 'by' num [1:100(1d)] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 1 #>   .. .. .. ..$ data.full$study: chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..- attr(*, \"call\")= language by.default(data = data.full$effect.size, INDICES = data.full$study, FUN = function(x) matrix(x)) #>   .. ..$ Xreg          : num [1:100, 1] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. ..$ : chr \"X.Intercept.\" #>   .. ..$ b.r           : num [1, 1] 0.129 #>   .. ..$ VR.r          : num [1, 1] 0.000442 #>   .. ..$ dfs           : num 49.3 #>   .. ..$ small         : logi TRUE #>   .. ..$ data          : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   .. .. ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ biased     : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>   .. .. ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   .. .. ..$ yi_adj     : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   .. .. ..$ userweight : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. ..$ labels        : chr \"X.Intercept.\" #>   .. ..$ study_orig_id : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..- attr(*, \"class\")= chr \"robu\" #>  - attr(*, \"class\")= chr [1:2] \"metabias\" \"list\"  # publication bias and internal bias in the non-randomized studies multibias_meta(yi = meta_meat$yi,                vi = meta_meat$vi,                biased = !meta_meat$randomized,                selection_ratio = 4,                bias_affirmative = log(1.5),                bias_nonaffirmative = log(1.1)) #> List of 4 #>  $ data  : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   ..$ biased     : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>   ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   ..$ yi_adj     : num [1:100] -0.514 -0.124 -0.204 0.395 0.109 ... #>   ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   ..$ userweight : num [1:100] 25.4 77.1 67.4 39.8 80.5 ... #>  $ values:List of 7 #>   ..$ selection_ratio    : num 4 #>   ..$ bias_affirmative   : num 0.405 #>   ..$ bias_nonaffirmative: num 0.0953 #>   ..$ favor_positive     : logi TRUE #>   ..$ alpha_select       : num 0.05 #>   ..$ ci_level           : num 0.95 #>   ..$ small              : logi TRUE #>  $ stats :'data.frame':\t1 obs. of  6 variables: #>   ..$ model   : chr \"multibias\" #>   ..$ estimate: num 0.0949 #>   ..$ se      : num 0.0241 #>   ..$ ci_lower: num 0.0466 #>   ..$ ci_upper: num 0.143 #>   ..$ p_value : num 0.000245 #>  $ fits  :List of 1 #>   ..$ multibias:List of 25 #>   .. ..$ data.full     :'data.frame':\t100 obs. of  14 variables: #>   .. .. ..$ effect.size     : num [1:100] -0.514 -0.124 -0.204 0.395 0.109 ... #>   .. .. ..$ var.eff.size    : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ userweights     : num [1:100] 25.4 77.1 67.4 39.8 80.5 ... #>   .. .. ..$ study           : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ k               : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ avg.var.eff.size: num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sd.eff.size     : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ weights         : num [1:100] 8.78 122.29 63.99 17.64 166.67 ... #>   .. .. ..$ pred            : num [1:100, 1] 0.156 0.156 0.156 0.156 0.156 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e               : num [1:100, 1] -0.6698 -0.28 -0.3593 0.2396 -0.0464 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ r.weights       : num [1:100] 25.4 77.1 67.4 39.8 80.5 ... #>   .. .. ..$ pred.r          : num [1:100, 1] 0.0949 0.0949 0.0949 0.0949 0.0949 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e.r             : num [1:100] -0.6091 -0.2194 -0.2986 0.3002 0.0143 ... #>   .. .. ..$ ImH             : num [1:100, 1:100] 0.99345 -0.00655 -0.00655 -0.00655 -0.00655 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. ..$ X.full        :'data.frame':\t100 obs. of  2 variables: #>   .. .. ..$ study       : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ X.Intercept.: num [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ reg_table     :'data.frame':\t1 obs. of  9 variables: #>   .. .. ..$ labels: chr \"X.Intercept.\" #>   .. .. ..$ b.r   : num 0.0949 #>   .. .. ..$ SE    : num 0.0241 #>   .. .. ..$ t     : num 3.95 #>   .. .. ..$ dfs   : num 50.6 #>   .. .. ..$ prob  : num 0.000245 #>   .. .. ..$ CI.L  : num 0.0466 #>   .. .. ..$ CI.U  : num 0.143 #>   .. .. ..$ sig   : chr \"***\" #>   .. ..$ mod_label     : chr [1:2] \"RVE: User Specified Weights\" \"with Small-Sample Corrections\" #>   .. ..$ mod_notice    : chr \"Note: If df < 4, do not trust the results\" #>   .. ..$ modelweights  : chr \"CORR\" #>   .. ..$ mod_info      :List of 4 #>   .. .. ..$ k: int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ N: num 100 #>   .. .. ..$ p: num 0 #>   .. .. ..$ M: int 100 #>   .. ..$ user_weighting: logi TRUE #>   .. ..$ ml            : language yi_adj ~ 1 #>   .. ..$ cl            : language robumeta::robu(formula = yi_adj ~ 1, data = dat, studynum = cluster, var.eff.size = dat$vi,      userweights = da| __truncated__ #>   .. ..$ N             : num 100 #>   .. ..$ M             : int 100 #>   .. ..$ k             : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ k_list        :List of 100 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. .. [list output truncated] #>   .. ..$ p             : num 0 #>   .. ..$ X             :List of 100 #>   .. .. ..$ 1  : num [1, 1] 1 #>   .. .. ..$ 2  : num [1, 1] 1 #>   .. .. ..$ 3  : num [1, 1] 1 #>   .. .. ..$ 4  : num [1, 1] 1 #>   .. .. ..$ 5  : num [1, 1] 1 #>   .. .. ..$ 6  : num [1, 1] 1 #>   .. .. ..$ 7  : num [1, 1] 1 #>   .. .. ..$ 8  : num [1, 1] 1 #>   .. .. ..$ 9  : num [1, 1] 1 #>   .. .. ..$ 10 : num [1, 1] 1 #>   .. .. ..$ 11 : num [1, 1] 1 #>   .. .. ..$ 12 : num [1, 1] 1 #>   .. .. ..$ 13 : num [1, 1] 1 #>   .. .. ..$ 14 : num [1, 1] 1 #>   .. .. ..$ 15 : num [1, 1] 1 #>   .. .. ..$ 16 : num [1, 1] 1 #>   .. .. ..$ 17 : num [1, 1] 1 #>   .. .. ..$ 18 : num [1, 1] 1 #>   .. .. ..$ 19 : num [1, 1] 1 #>   .. .. ..$ 20 : num [1, 1] 1 #>   .. .. ..$ 21 : num [1, 1] 1 #>   .. .. ..$ 22 : num [1, 1] 1 #>   .. .. ..$ 23 : num [1, 1] 1 #>   .. .. ..$ 24 : num [1, 1] 1 #>   .. .. ..$ 25 : num [1, 1] 1 #>   .. .. ..$ 26 : num [1, 1] 1 #>   .. .. ..$ 27 : num [1, 1] 1 #>   .. .. ..$ 28 : num [1, 1] 1 #>   .. .. ..$ 29 : num [1, 1] 1 #>   .. .. ..$ 30 : num [1, 1] 1 #>   .. .. ..$ 31 : num [1, 1] 1 #>   .. .. ..$ 32 : num [1, 1] 1 #>   .. .. ..$ 33 : num [1, 1] 1 #>   .. .. ..$ 34 : num [1, 1] 1 #>   .. .. ..$ 35 : num [1, 1] 1 #>   .. .. ..$ 36 : num [1, 1] 1 #>   .. .. ..$ 37 : num [1, 1] 1 #>   .. .. ..$ 38 : num [1, 1] 1 #>   .. .. ..$ 39 : num [1, 1] 1 #>   .. .. ..$ 40 : num [1, 1] 1 #>   .. .. ..$ 41 : num [1, 1] 1 #>   .. .. ..$ 42 : num [1, 1] 1 #>   .. .. ..$ 43 : num [1, 1] 1 #>   .. .. ..$ 44 : num [1, 1] 1 #>   .. .. ..$ 45 : num [1, 1] 1 #>   .. .. ..$ 46 : num [1, 1] 1 #>   .. .. ..$ 47 : num [1, 1] 1 #>   .. .. ..$ 48 : num [1, 1] 1 #>   .. .. ..$ 49 : num [1, 1] 1 #>   .. .. ..$ 50 : num [1, 1] 1 #>   .. .. ..$ 51 : num [1, 1] 1 #>   .. .. ..$ 52 : num [1, 1] 1 #>   .. .. ..$ 53 : num [1, 1] 1 #>   .. .. ..$ 54 : num [1, 1] 1 #>   .. .. ..$ 55 : num [1, 1] 1 #>   .. .. ..$ 56 : num [1, 1] 1 #>   .. .. ..$ 57 : num [1, 1] 1 #>   .. .. ..$ 58 : num [1, 1] 1 #>   .. .. ..$ 59 : num [1, 1] 1 #>   .. .. ..$ 60 : num [1, 1] 1 #>   .. .. ..$ 61 : num [1, 1] 1 #>   .. .. ..$ 62 : num [1, 1] 1 #>   .. .. ..$ 63 : num [1, 1] 1 #>   .. .. ..$ 64 : num [1, 1] 1 #>   .. .. ..$ 65 : num [1, 1] 1 #>   .. .. ..$ 66 : num [1, 1] 1 #>   .. .. ..$ 67 : num [1, 1] 1 #>   .. .. ..$ 68 : num [1, 1] 1 #>   .. .. ..$ 69 : num [1, 1] 1 #>   .. .. ..$ 70 : num [1, 1] 1 #>   .. .. ..$ 71 : num [1, 1] 1 #>   .. .. ..$ 72 : num [1, 1] 1 #>   .. .. ..$ 73 : num [1, 1] 1 #>   .. .. ..$ 74 : num [1, 1] 1 #>   .. .. ..$ 75 : num [1, 1] 1 #>   .. .. ..$ 76 : num [1, 1] 1 #>   .. .. ..$ 77 : num [1, 1] 1 #>   .. .. ..$ 78 : num [1, 1] 1 #>   .. .. ..$ 79 : num [1, 1] 1 #>   .. .. ..$ 80 : num [1, 1] 1 #>   .. .. ..$ 81 : num [1, 1] 1 #>   .. .. ..$ 82 : num [1, 1] 1 #>   .. .. ..$ 83 : num [1, 1] 1 #>   .. .. ..$ 84 : num [1, 1] 1 #>   .. .. ..$ 85 : num [1, 1] 1 #>   .. .. ..$ 86 : num [1, 1] 1 #>   .. .. ..$ 87 : num [1, 1] 1 #>   .. .. ..$ 88 : num [1, 1] 1 #>   .. .. ..$ 89 : num [1, 1] 1 #>   .. .. ..$ 90 : num [1, 1] 1 #>   .. .. ..$ 91 : num [1, 1] 1 #>   .. .. ..$ 92 : num [1, 1] 1 #>   .. .. ..$ 93 : num [1, 1] 1 #>   .. .. ..$ 94 : num [1, 1] 1 #>   .. .. ..$ 95 : num [1, 1] 1 #>   .. .. ..$ 96 : num [1, 1] 1 #>   .. .. ..$ 97 : num [1, 1] 1 #>   .. .. ..$ 98 : num [1, 1] 1 #>   .. .. ..$ 99 : num [1, 1] 1 #>   .. .. .. [list output truncated] #>   .. ..$ y             : 'by' num [1:100(1d)] -0.514 -0.124 -0.204 0.395 0.109 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 1 #>   .. .. .. ..$ data.full$study: chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..- attr(*, \"call\")= language by.default(data = data.full$effect.size, INDICES = data.full$study, FUN = function(x) matrix(x)) #>   .. ..$ Xreg          : num [1:100, 1] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. ..$ : chr \"X.Intercept.\" #>   .. ..$ b.r           : num [1, 1] 0.0949 #>   .. ..$ VR.r          : num [1, 1] 0.000578 #>   .. ..$ dfs           : num 50.6 #>   .. ..$ small         : logi TRUE #>   .. ..$ data          : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   .. .. ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ biased     : logi [1:100] TRUE TRUE TRUE FALSE FALSE FALSE ... #>   .. .. ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   .. .. ..$ yi_adj     : num [1:100] -0.514 -0.124 -0.204 0.395 0.109 ... #>   .. .. ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   .. .. ..$ userweight : num [1:100] 25.4 77.1 67.4 39.8 80.5 ... #>   .. ..$ labels        : chr \"X.Intercept.\" #>   .. ..$ study_orig_id : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..- attr(*, \"class\")= chr \"robu\" #>  - attr(*, \"class\")= chr [1:2] \"metabias\" \"list\"  # treat all studies as biased, not just non-randomized ones multibias_meta(yi = meta_meat$yi,                vi = meta_meat$vi,                biased = TRUE,                selection_ratio = 4,                bias_affirmative = log(1.5),                bias_nonaffirmative = log(1.1)) #> List of 4 #>  $ data  : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   ..$ biased     : logi [1:100] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   ..$ yi_adj     : num [1:100] -0.50747 -0.11774 -0.19699 0.27596 -0.00997 ... #>   ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   ..$ userweight : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>  $ values:List of 7 #>   ..$ selection_ratio    : num 4 #>   ..$ bias_affirmative   : num 0.405 #>   ..$ bias_nonaffirmative: num 0.0953 #>   ..$ favor_positive     : logi TRUE #>   ..$ alpha_select       : num 0.05 #>   ..$ ci_level           : num 0.95 #>   ..$ small              : logi TRUE #>  $ stats :'data.frame':\t1 obs. of  6 variables: #>   ..$ model   : chr \"multibias\" #>   ..$ estimate: num 0.0102 #>   ..$ se      : num 0.021 #>   ..$ ci_lower: num -0.0321 #>   ..$ ci_upper: num 0.0525 #>   ..$ p_value : num 0.63 #>  $ fits  :List of 1 #>   ..$ multibias:List of 25 #>   .. ..$ data.full     :'data.frame':\t100 obs. of  14 variables: #>   .. .. ..$ effect.size     : num [1:100] -0.50747 -0.11774 -0.19699 0.27596 -0.00997 ... #>   .. .. ..$ var.eff.size    : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ userweights     : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. .. ..$ study           : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ k               : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ avg.var.eff.size: num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sd.eff.size     : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ weights         : num [1:100] 8.78 122.29 63.99 17.64 166.67 ... #>   .. .. ..$ pred            : num [1:100, 1] 0.0813 0.0813 0.0813 0.0813 0.0813 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e               : num [1:100, 1] -0.5887 -0.199 -0.2783 0.1947 -0.0912 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ r.weights       : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. .. ..$ pred.r          : num [1:100, 1] 0.0102 0.0102 0.0102 0.0102 0.0102 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. .. ..$ e.r             : num [1:100] -0.5177 -0.1279 -0.2072 0.2658 -0.0202 ... #>   .. .. ..$ ImH             : num [1:100, 1:100] 0.99367 -0.00633 -0.00633 -0.00633 -0.00633 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. .. ..$ : NULL #>   .. ..$ X.full        :'data.frame':\t100 obs. of  2 variables: #>   .. .. ..$ study       : num [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ X.Intercept.: num [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ reg_table     :'data.frame':\t1 obs. of  9 variables: #>   .. .. ..$ labels: chr \"X.Intercept.\" #>   .. .. ..$ b.r   : num 0.0102 #>   .. .. ..$ SE    : num 0.021 #>   .. .. ..$ t     : num 0.485 #>   .. .. ..$ dfs   : num 49.3 #>   .. .. ..$ prob  : num 0.63 #>   .. .. ..$ CI.L  : num -0.0321 #>   .. .. ..$ CI.U  : num 0.0525 #>   .. .. ..$ sig   : chr \"\" #>   .. ..$ mod_label     : chr [1:2] \"RVE: User Specified Weights\" \"with Small-Sample Corrections\" #>   .. ..$ mod_notice    : chr \"Note: If df < 4, do not trust the results\" #>   .. ..$ modelweights  : chr \"CORR\" #>   .. ..$ mod_info      :List of 4 #>   .. .. ..$ k: int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..$ N: num 100 #>   .. .. ..$ p: num 0 #>   .. .. ..$ M: int 100 #>   .. ..$ user_weighting: logi TRUE #>   .. ..$ ml            : language yi_adj ~ 1 #>   .. ..$ cl            : language robumeta::robu(formula = yi_adj ~ 1, data = dat, studynum = cluster, var.eff.size = dat$vi,      userweights = da| __truncated__ #>   .. ..$ N             : num 100 #>   .. ..$ M             : int 100 #>   .. ..$ k             : int [1:100] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ k_list        :List of 100 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. ..$ : int 1 #>   .. .. .. [list output truncated] #>   .. ..$ p             : num 0 #>   .. ..$ X             :List of 100 #>   .. .. ..$ 1  : num [1, 1] 1 #>   .. .. ..$ 2  : num [1, 1] 1 #>   .. .. ..$ 3  : num [1, 1] 1 #>   .. .. ..$ 4  : num [1, 1] 1 #>   .. .. ..$ 5  : num [1, 1] 1 #>   .. .. ..$ 6  : num [1, 1] 1 #>   .. .. ..$ 7  : num [1, 1] 1 #>   .. .. ..$ 8  : num [1, 1] 1 #>   .. .. ..$ 9  : num [1, 1] 1 #>   .. .. ..$ 10 : num [1, 1] 1 #>   .. .. ..$ 11 : num [1, 1] 1 #>   .. .. ..$ 12 : num [1, 1] 1 #>   .. .. ..$ 13 : num [1, 1] 1 #>   .. .. ..$ 14 : num [1, 1] 1 #>   .. .. ..$ 15 : num [1, 1] 1 #>   .. .. ..$ 16 : num [1, 1] 1 #>   .. .. ..$ 17 : num [1, 1] 1 #>   .. .. ..$ 18 : num [1, 1] 1 #>   .. .. ..$ 19 : num [1, 1] 1 #>   .. .. ..$ 20 : num [1, 1] 1 #>   .. .. ..$ 21 : num [1, 1] 1 #>   .. .. ..$ 22 : num [1, 1] 1 #>   .. .. ..$ 23 : num [1, 1] 1 #>   .. .. ..$ 24 : num [1, 1] 1 #>   .. .. ..$ 25 : num [1, 1] 1 #>   .. .. ..$ 26 : num [1, 1] 1 #>   .. .. ..$ 27 : num [1, 1] 1 #>   .. .. ..$ 28 : num [1, 1] 1 #>   .. .. ..$ 29 : num [1, 1] 1 #>   .. .. ..$ 30 : num [1, 1] 1 #>   .. .. ..$ 31 : num [1, 1] 1 #>   .. .. ..$ 32 : num [1, 1] 1 #>   .. .. ..$ 33 : num [1, 1] 1 #>   .. .. ..$ 34 : num [1, 1] 1 #>   .. .. ..$ 35 : num [1, 1] 1 #>   .. .. ..$ 36 : num [1, 1] 1 #>   .. .. ..$ 37 : num [1, 1] 1 #>   .. .. ..$ 38 : num [1, 1] 1 #>   .. .. ..$ 39 : num [1, 1] 1 #>   .. .. ..$ 40 : num [1, 1] 1 #>   .. .. ..$ 41 : num [1, 1] 1 #>   .. .. ..$ 42 : num [1, 1] 1 #>   .. .. ..$ 43 : num [1, 1] 1 #>   .. .. ..$ 44 : num [1, 1] 1 #>   .. .. ..$ 45 : num [1, 1] 1 #>   .. .. ..$ 46 : num [1, 1] 1 #>   .. .. ..$ 47 : num [1, 1] 1 #>   .. .. ..$ 48 : num [1, 1] 1 #>   .. .. ..$ 49 : num [1, 1] 1 #>   .. .. ..$ 50 : num [1, 1] 1 #>   .. .. ..$ 51 : num [1, 1] 1 #>   .. .. ..$ 52 : num [1, 1] 1 #>   .. .. ..$ 53 : num [1, 1] 1 #>   .. .. ..$ 54 : num [1, 1] 1 #>   .. .. ..$ 55 : num [1, 1] 1 #>   .. .. ..$ 56 : num [1, 1] 1 #>   .. .. ..$ 57 : num [1, 1] 1 #>   .. .. ..$ 58 : num [1, 1] 1 #>   .. .. ..$ 59 : num [1, 1] 1 #>   .. .. ..$ 60 : num [1, 1] 1 #>   .. .. ..$ 61 : num [1, 1] 1 #>   .. .. ..$ 62 : num [1, 1] 1 #>   .. .. ..$ 63 : num [1, 1] 1 #>   .. .. ..$ 64 : num [1, 1] 1 #>   .. .. ..$ 65 : num [1, 1] 1 #>   .. .. ..$ 66 : num [1, 1] 1 #>   .. .. ..$ 67 : num [1, 1] 1 #>   .. .. ..$ 68 : num [1, 1] 1 #>   .. .. ..$ 69 : num [1, 1] 1 #>   .. .. ..$ 70 : num [1, 1] 1 #>   .. .. ..$ 71 : num [1, 1] 1 #>   .. .. ..$ 72 : num [1, 1] 1 #>   .. .. ..$ 73 : num [1, 1] 1 #>   .. .. ..$ 74 : num [1, 1] 1 #>   .. .. ..$ 75 : num [1, 1] 1 #>   .. .. ..$ 76 : num [1, 1] 1 #>   .. .. ..$ 77 : num [1, 1] 1 #>   .. .. ..$ 78 : num [1, 1] 1 #>   .. .. ..$ 79 : num [1, 1] 1 #>   .. .. ..$ 80 : num [1, 1] 1 #>   .. .. ..$ 81 : num [1, 1] 1 #>   .. .. ..$ 82 : num [1, 1] 1 #>   .. .. ..$ 83 : num [1, 1] 1 #>   .. .. ..$ 84 : num [1, 1] 1 #>   .. .. ..$ 85 : num [1, 1] 1 #>   .. .. ..$ 86 : num [1, 1] 1 #>   .. .. ..$ 87 : num [1, 1] 1 #>   .. .. ..$ 88 : num [1, 1] 1 #>   .. .. ..$ 89 : num [1, 1] 1 #>   .. .. ..$ 90 : num [1, 1] 1 #>   .. .. ..$ 91 : num [1, 1] 1 #>   .. .. ..$ 92 : num [1, 1] 1 #>   .. .. ..$ 93 : num [1, 1] 1 #>   .. .. ..$ 94 : num [1, 1] 1 #>   .. .. ..$ 95 : num [1, 1] 1 #>   .. .. ..$ 96 : num [1, 1] 1 #>   .. .. ..$ 97 : num [1, 1] 1 #>   .. .. ..$ 98 : num [1, 1] 1 #>   .. .. ..$ 99 : num [1, 1] 1 #>   .. .. .. [list output truncated] #>   .. ..$ y             : 'by' num [1:100(1d)] -0.50747 -0.11774 -0.19699 0.27596 -0.00997 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 1 #>   .. .. .. ..$ data.full$study: chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..- attr(*, \"call\")= language by.default(data = data.full$effect.size, INDICES = data.full$study, FUN = function(x) matrix(x)) #>   .. ..$ Xreg          : num [1:100, 1] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:100] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. .. ..$ : chr \"X.Intercept.\" #>   .. ..$ b.r           : num [1, 1] 0.0102 #>   .. ..$ VR.r          : num [1, 1] 0.000442 #>   .. ..$ dfs           : num 49.3 #>   .. ..$ small         : logi TRUE #>   .. ..$ data          : tibble [100 × 9] (S3: tbl_df/tbl/data.frame) #>   .. .. ..$ yi         : num [1:100] -0.3883 0.00143 -0.07782 0.39513 0.1092 ... #>   .. .. ..$ vi         : num [1:100] 0.11387 0.00818 0.01563 0.0567 0.006 ... #>   .. .. ..$ sei        : num [1:100] 0.3374 0.0904 0.125 0.2381 0.0775 ... #>   .. .. ..$ biased     : logi [1:100] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   .. .. ..$ cluster    : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..$ affirmative: logi [1:100] FALSE FALSE FALSE FALSE FALSE TRUE ... #>   .. .. ..$ yi_adj     : num [1:100] -0.50747 -0.11774 -0.19699 0.27596 -0.00997 ... #>   .. .. ..$ weight     : num [1:100] 4 4 4 4 4 1 1 4 1 4 ... #>   .. .. ..$ userweight : num [1:100] 26 83.5 72.2 41.5 87.5 ... #>   .. ..$ labels        : chr \"X.Intercept.\" #>   .. ..$ study_orig_id : int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..- attr(*, \"class\")= chr \"robu\" #>  - attr(*, \"class\")= chr [1:2] \"metabias\" \"list\""},{"path":"http://mikabr.io/multibiasmeta/reference/multibiasmeta-package.html","id":null,"dir":"Reference","previous_headings":"","what":"multibiasmeta: Sensitivity analysis for the interactive effects of internal bias and\n  publication bias in meta-analyses — multibiasmeta-package","title":"multibiasmeta: Sensitivity analysis for the interactive effects of internal bias and\n  publication bias in meta-analyses — multibiasmeta-package","text":"Meta-analyses can compromised studies' internal biases (e.g.,   confounding nonrandomized studies) well publication bias.   package conducts sensitivity analyses joint effects biases   [see Mathur MB (2022). \"Sensitivity analysis interactive effects   internal bias publication bias meta-analyses.\"   doi:10.31219/osf.io/u7vcb .] sensitivity analyses address two   questions: (1) \"given severity internal bias across studies   publication bias, much results change?\"; (2) \"given   severity publication bias, severe internal bias ,   hypothetically, attenuate results null given amount?\"","code":""},{"path":"http://mikabr.io/multibiasmeta/reference/multibiasmeta-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"multibiasmeta: Sensitivity analysis for the interactive effects of internal bias and\n  publication bias in meta-analyses — multibiasmeta-package","text":"Mathur MB (2022). “Sensitivity analysis interactive effects internal bias publication bias meta-analyses.” doi:10.31219/osf.io/u7vcb , osf.io/u7vcb. Ding P, VanderWeele TJ (2016). “Sensitivity analysis without assumptions.” Epidemiology (Cambridge, Mass.), 27(3), 368. Smith LH, VanderWeele TJ (2019). “Bounding bias due selection.” Epidemiology (Cambridge, Mass.), 30(4), 509. VanderWeele TJ, Li Y (2019). “Simple sensitivity analysis differential measurement error.” American journal epidemiology, 188(10), 1823--1829. Mathur MB, Peacock J, Reichling DB, Nadler J, Bain PA, Gardner CD, Robinson TN (2021). “Interventions reduce meat consumption appealing animal welfare: Meta-analysis evidence-based recommendations.” Appetite, 164, 105277.","code":""},{"path":[]},{"path":"http://mikabr.io/multibiasmeta/reference/multibiasmeta-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"multibiasmeta: Sensitivity analysis for the interactive effects of internal bias and\n  publication bias in meta-analyses — multibiasmeta-package","text":"Maintainer: Mika Braginsky mika.br@gmail.com Authors: Maya Mathur mmathur@stanford.edu","code":""}]
